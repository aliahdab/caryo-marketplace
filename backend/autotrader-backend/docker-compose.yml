version: '3.8'

services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: autotrader
      POSTGRES_USER: autotrader
      POSTGRES_PASSWORD: autotrader
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U autotrader"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server --console-address ":9001" /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/autotrader
      - SPRING_DATASOURCE_USERNAME=autotrader
      - SPRING_DATASOURCE_PASSWORD=autotrader
      - STORAGE_S3_ENABLED=true
      - STORAGE_S3_ENDPOINT=http://minio:9000
      - STORAGE_S3_BUCKET_NAME=autotrader-assets
      - STORAGE_S3_ACCESS_KEY=minioadmin
      - STORAGE_S3_SECRET_KEY=minioadmin
      - STORAGE_S3_REGION=us-east-1
      - SERVER_PORT=8080
      # Add any other environment variables your application needs here
    ports:
      - "8080:8080"
    volumes:
      - ./uploads:/app/uploads
    restart: unless-stopped

volumes:
  postgres_data:
  minio_data:
