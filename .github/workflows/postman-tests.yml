name: Postman API Tests

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 1'  # Run weekly on Mondays at midnight

jobs:
  setup-gradle:
    uses: ./.github/workflows/reusable/gradle-setup.yml
    with:
      working-directory: "./backend/autotrader-backend"
      java-version: "17"
      gradle-version: "8.5"
      cache: true
      
  setup-docker-services:
    uses: ./.github/workflows/reusable/docker-services-setup.yml
    with:
      docker-compose-file: "./backend/autotrader-backend/docker-compose.dev.yml"
      services: "db minio createbuckets redis"
      wait-time: 60
      db-container-name: "db"
      db-user: "autotrader"
      
  spring-boot-setup:
    uses: ./.github/workflows/reusable/spring-boot-setup.yml
    needs: [setup-gradle, setup-docker-services]
    with:
      working-directory: "./backend/autotrader-backend"
      spring-profiles: "dev"
      debug-mode: true
      wait-retries: 45
      wait-time: 10
      health-check-path: "/actuator/health"
      
  postman-tests:
    uses: ./.github/workflows/reusable/postman-tests.yml
    needs: [spring-boot-setup]
    with:
      environment-file: './postman/test_environment.json'
      results-directory: 'results'
      auto-detect-collection: true

  api-tests:
    needs: [postman-tests]
    runs-on: ubuntu-latest
    timeout-minutes: 5  # Short timeout since it just wraps other jobs

    steps:
    - name: Get Results
      run: echo "Postman API tests completed"

  # This job will always run after the tests are done, regardless of success or failure
  cleanup:
    if: always()
    needs: [api-tests]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Cleanup test environment
      run: |
        echo "Cleaning up test environment"
        
        # Stop Docker services if they were started
        if [ -f "./backend/autotrader-backend/docker-compose.dev.yml" ]; then
          echo "Stopping Docker services..."
          cd ./backend/autotrader-backend
          docker compose -f docker-compose.dev.yml down -v
        fi
        
        echo "Cleanup complete"
