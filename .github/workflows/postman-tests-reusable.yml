name: Reusable Postman Tests

# This is a reusable workflow that handles running Postman tests
on:
  workflow_call:
    inputs:
      collection-path:
        description: 'Path to the Postman collection file'
        required: false
        type: string
      environment-path:
        description: 'Path to the Postman environment file'
        default: './postman/test_environment.json'
        required: false
        type: string
      api-url:
        description: 'Base URL for the API'
        default: 'http://localhost:8080'
        required: false
        type: string

jobs:
  run-postman-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Install Newman
      run: npm install -g newman newman-reporter-htmlextra

    - name: Create Results Directory
      run: mkdir -p results
      
    - name: Prepare Environment File
      run: |
        echo "Checking and preparing Postman environment file..."
        if [ -f "${{ inputs.environment-path }}" ]; then
          # Make a backup of the original file
          cp "${{ inputs.environment-path }}" "${{ inputs.environment-path }}.bak"
          
          # Update the environment file to ensure API URL is correct
          echo "Ensuring API URL is correctly set to ${{ inputs.api-url }}..."
          cat "${{ inputs.environment-path }}" | grep -i url || echo "No URL found in environment file"
          
          # Update the file to ensure proper URL
          sed -i 's|"value": "http://[^/]*|"value": "${{ inputs.api-url }}|g' "${{ inputs.environment-path }}"
          
          echo "Updated environment file:"
          cat "${{ inputs.environment-path }}" | grep -i url
        else
          echo "WARNING: Environment file not found at ${{ inputs.environment-path }}"
          echo "Searching for environment files:"
          find . -name "*environment*.json" -o -name "*env*.json"
        fi

    - name: Run Postman Collection
      run: |
        echo "Running Postman collection tests..."
        
        # Determine which collection file to use
        COLLECTION_PATH="${{ inputs.collection-path }}"
        if [ -z "$COLLECTION_PATH" ] || [ ! -f "$COLLECTION_PATH" ]; then
          echo "Collection path not provided or file not found. Looking for collection files..."
          
          if [ -f "./postman/Caryo_Marketplace_API_Tests.json" ]; then
            COLLECTION_PATH="./postman/Caryo_Marketplace_API_Tests.json"
            echo "Using Caryo_Marketplace_API_Tests.json collection file"
          elif [ -f "./backend/autotrader-backend/src/test/resources/postman/autotrader-api-collection.json" ]; then
            COLLECTION_PATH="./backend/autotrader-backend/src/test/resources/postman/autotrader-api-collection.json"
            echo "Using autotrader-api-collection.json collection file"
          else
            echo "ERROR: Postman collection file not found"
            echo "Searching for collection files in project..."
            find . -name "*.json" | grep -i -E "collection|postman|api[-_]test"
            exit 1
          fi
        else
          echo "Using specified collection file: $COLLECTION_PATH"
        fi
        
        # Run newman with enhanced timeout and verbose logging
        echo "Running Newman with verbose output..."
        newman run "$COLLECTION_PATH" \
          --environment "${{ inputs.environment-path }}" \
          --timeout-request 60000 \
          --timeout 120000 \
          --reporters cli,junit,htmlextra \
          --reporter-junit-export results/junit-report.xml \
          --reporter-htmlextra-export results/html-report.html \
          --verbose

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: postman-test-results
        path: results/
