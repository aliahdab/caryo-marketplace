name: Backend Unit Tests

on:
  workflow_dispatch:  # Manual trigger
  pull_request:
    paths:
      - 'backend/autotrader-backend/**'
      - '.github/workflows/unit-tests.yml'
      - '.github/actions/gradle-setup/**'
    branches: [ 'main', 'develop' ]  # Run on PRs to both main and develop

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        lfs: true

    # Use the Gradle setup composite action
    - name: Setup Gradle Environment
      uses: ./.github/actions/gradle-setup
      with:
        working-directory: "./backend/autotrader-backend"
        java-version: "17"
        cache: true

    # Run unit tests using Gradle
    - name: Run Unit Tests
      working-directory: ./backend/autotrader-backend
      run: |
        echo "Running unit tests (excluding integration tests)..."
        
        # List all test tasks for debugging
        echo "Available test tasks:"
        ./gradlew tasks --all | grep -E "test|Test" || true
        
        # Only run unit tests, exclude integration tests by pattern if the integrationTest task exists
        echo "Excluding integration tests and using H2 database for unit tests only."
        export SPRING_PROFILES_ACTIVE=unit,h2

        if ./gradlew tasks --all | grep -q "test"; then
          echo "Running standard unit tests with exclusion patterns"
          # Use our configured test task that already excludes integration tests
          ./gradlew test
          # Check exit code
          if [ $? -ne 0 ]; then
            echo "Unit tests failed. Check the logs for details."
            exit 1
          fi
        else
          echo "Standard test task not found, falling back to pattern matching"
          ./gradlew test --tests "*Test" --exclude-task integrationTest
        fi

        # Generate JaCoCo reports if available
        if ./gradlew tasks --all | grep -q "jacocoTestReport"; then
          echo "Generating JaCoCo test report..."
          ./gradlew jacocoTestReport
        fi

    # Upload test results and coverage
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: unit-test-results
        path: |
          backend/autotrader-backend/build/reports/tests/test/
          backend/autotrader-backend/build/test-results/test/

    - name: Upload test coverage
      if: success() || failure()
      uses: codecov/codecov-action@v4
      with:
        files: ./backend/autotrader-backend/build/reports/jacoco/test/jacocoTestReport.xml
        directory: ./backend/autotrader-backend/build/reports/
        flags: unit-tests
        fail_ci_if_error: false
        verbose: true
