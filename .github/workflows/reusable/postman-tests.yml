name: Reusable Postman Tests

on:
  workflow_call:
    inputs:
      collection-path:
        required: false
        type: string
        default: ''
        description: "Path to the Postman collection file (if empty, will auto-detect)"
      environment-file:
        required: false
        type: string
        default: './postman/test_environment.json'
        description: "Path to the Postman environment file"
      results-directory:
        required: false
        type: string
        default: 'results'
        description: "Directory to store test results"
      reporters:
        required: false
        type: string
        default: 'cli,junit,htmlextra'
        description: "Newman reporters to use (comma-separated)"
      working-directory:
        required: false
        type: string
        default: '.'
        description: "Working directory for running the tests"
      auto-detect-collection:
        required: false
        type: boolean
        default: true
        description: "Whether to auto-detect the collection file if not specified"

jobs:
  run-postman-tests:
    runs-on: ubuntu-lates
    steps:
      - name: Install Newman
        run: npm install -g newman newman-reporter-htmlextra

      - name: Create Results Directory
        run: mkdir -p ${{ inputs.results-directory }}

      - name: Run Postman Collection
        working-directory: ${{ inputs.working-directory }}
        run: |
          echo "Running Postman collection tests..."

          # Determine which collection file to use
          COLLECTION_PATH="${{ inputs.collection-path }}"

          # Auto-detect collection if needed
          if [[ -z "$COLLECTION_PATH" && "${{ inputs.auto-detect-collection }}" == "true" ]]; then
            if [ -f "./postman/Caryo_Marketplace_API_Tests.json" ]; then
              COLLECTION_PATH="./postman/Caryo_Marketplace_API_Tests.json"
              echo "Auto-detected collection file: $COLLECTION_PATH"
            elif [ -f "./backend/autotrader-backend/src/test/resources/postman/autotrader-api-collection.json" ]; then
              COLLECTION_PATH="./backend/autotrader-backend/src/test/resources/postman/autotrader-api-collection.json"
              echo "Auto-detected collection file: $COLLECTION_PATH"
            else
              echo "Searching for possible collection files..."
              POSSIBLE_FILES=$(find . -name "*.json" | grep -i -E "collection|postman|api[-_]test")

              if [ ! -z "$POSSIBLE_FILES" ]; then
                echo "Found possible collection files:"
                echo "$POSSIBLE_FILES"
                # Take the first match if there are multiple
                COLLECTION_PATH=$(echo "$POSSIBLE_FILES" | head -n 1)
                echo "Using auto-detected collection file: $COLLECTION_PATH"
              else
                echo "ERROR: No Postman collection file found"
                exit 1
              fi
            fi
          fi

          # Verify the collection file exists
          if [ ! -f "$COLLECTION_PATH" ]; then
            echo "ERROR: Specified collection file does not exist: $COLLECTION_PATH"
            exit 1
          fi

          # Verify the environment file exists
          if [ ! -f "${{ inputs.environment-file }}" ]; then
            echo "WARNING: Environment file not found: ${{ inputs.environment-file }}"
            echo "Continuing without environment file..."
            ENVIRONMENT_ARG=""
          else
            ENVIRONMENT_ARG="--environment ${{ inputs.environment-file }}"
          fi

          # Run the tests
          echo "Running collection: $COLLECTION_PATH"
          echo "With environment: ${{ inputs.environment-file }}"
          echo "Using reporters: ${{ inputs.reporters }}"

          newman run "$COLLECTION_PATH"
            $ENVIRONMENT_ARG
            --reporters ${{ inputs.reporters }}
            --reporter-junit-export ${{ inputs.results-directory }}/junit-report.xml
            --reporter-htmlextra-export ${{ inputs.results-directory }}/html-report.html

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: postman-test-results
          path: ${{ inputs.results-directory }}/
